"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1774],{87531:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var a=i(74848),t=i(28453);const s={date:"2024-08-20T04:00",unlisted:!0},r="\u2600\ufe0f Animator As Code V1 (\ud83d\udeab STAGING)",o={permalink:"/updates/2024/08/20/p0",source:"@site/updates/2024-08-20-p0.md",title:"\u2600\ufe0f Animator As Code V1 (\ud83d\udeab STAGING)",description:"Animator As Code V1 is leaving Alpha, starting from V1.1.0.",date:"2024-08-20T04:00:00.000Z",tags:[],hasTruncateMarker:!1,authors:[],frontMatter:{date:"2024-08-20T04:00",unlisted:!0},unlisted:!0},l={authorsImageUrls:[]},c=[{value:"Compatibility with projects that contain Animator As Code V0",id:"compatibility-with-projects-that-contain-animator-as-code-v0",level:2},{value:"Features in V1 compared to V0",id:"features-in-v1-compared-to-v0",level:2},{value:"Sub-State Machines",id:"sub-state-machines",level:3},{value:"Packaging, Non-VRChat projects, and non-destructive",id:"packaging-non-vrchat-projects-and-non-destructive",level:3},{value:"BlendTrees",id:"blendtrees",level:3},{value:"VRChat-specific features",id:"vrchat-specific-features",level:2},{value:"AnimatorPlayAudio",id:"animatorplayaudio",level:3},{value:"Prettier Parameter Drivers",id:"prettier-parameter-drivers",level:3},{value:"Changes in V1.1.0 compared to V1.0.99xx",id:"changes-in-v110-compared-to-v1099xx",level:2},{value:"Future breaking changes in V1.2.0",id:"future-breaking-changes-in-v120",level:2}];function d(e){const n={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:"Animator As Code V1 is leaving Alpha, starting from V1.1.0."}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.em,{children:"Animator As Code V1 - VRChat"})," is leaving Alpha."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.em,{children:"Animator As Code V1 - VRChat Destructive Workflow"})," is leaving Alpha."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.em,{children:"Animator As Code V1 - Modular Avatar functions"})," is leaving Alpha."]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Animator As Code V1 can now be safely used in public projects that wish to do so."}),"\n",(0,a.jsx)(n.h2,{id:"compatibility-with-projects-that-contain-animator-as-code-v0",children:"Compatibility with projects that contain Animator As Code V0"}),"\n",(0,a.jsx)(n.p,{children:"Installing Animator As Code V1 on a project that already uses Animator As Code V0 will not override it.\nBoth installations will act as separate, non-conflicting installs."}),"\n",(0,a.jsx)(n.p,{children:"For example, the following projects contain Animator As Code V0, and will continue to work properly:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://github.com/PiMaker",children:"Animator As Visual (pimaker)"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://suzuryg.github.io/face-emo/",children:"FaceEmo (suzuryg)"})}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"In fact Animator As Code V1 has already been extensively used in my own tools (Prefabulous, ComboGestureExpressions, Vixen)."}),"\n",(0,a.jsx)(n.h2,{id:"features-in-v1-compared-to-v0",children:"Features in V1 compared to V0"}),"\n",(0,a.jsx)(n.h3,{id:"sub-state-machines",children:"Sub-State Machines"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Pull major contributions from ",(0,a.jsx)(n.a,{href:"https://github.com/galister",children:(0,a.jsx)(n.strong,{children:"@galister"})})," which:","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsxs)(n.strong,{children:["Adds support for ",(0,a.jsx)(n.a,{href:"/docs/products/animator-as-code/functions/base#layer-aacfllayer",children:(0,a.jsx)(n.strong,{children:"sub-state machines"})})]}),", which is important because it enables the creation of states that evaluate multiple transitions within one frame,\nwhich is not possible to do without sub-state machines (with one exception).","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["This trait is already extensively used in ",(0,a.jsx)(n.em,{children:"ComboGestureExpressions V2"})," and above."]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.li,{children:"Share functionality of state and sub-state machines."}),"\n",(0,a.jsx)(n.li,{children:"Share functionality of Int and Float parameters together."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-csharp",children:'// When using Sub-State Machines, the Sub-State Machine will evaluate all transitions until\n// it resolves a destination state within one single frame.\n// This means it can traverse multiple transition conditions at once, no matter how nested\n// the Sub-State Machine is.\n//\n// This is not doable with just states, so Sub-State Machines have a functional value beyond mere organization.\nvar a = layer.IntParameter("IntA");\nvar b = layer.IntParameter("IntB");\nvar rootSsm = layer.NewSubStateMachine("UsingNestedSubStateMachines");\nfor (var i = 0; i < 16; i++)\n{\n    // A Sub-State Machine can have other Sub-State Machines created inside them.\n    // TransitionsFromEntry creates a transition between `subSsm` and the Entry node of the Sub-State Machine it belongs in.\n    // Exits creates a transition between `subSsm` and the Exit node.\n    \n    var subSsm = rootSsm.NewSubStateMachine($"A = {i}");\n    subSsm.TransitionsFromEntry().When(a.IsEqualTo(i));\n    subSsm.Exits();\n\n    for (var j = 0; j < 16; j++)\n    {\n        var state = subSsm.NewState($"A = {i} and B = {j}");\n        state.TransitionsFromEntry().When(b.IsEqualTo(j));\n        state.Exits()\n            .When(a.IsNotEqualTo(i))\n            .Or()\n            .When(b.IsNotEqualTo(j));\n    }\n}\n\n// This creates a transition between the Sub-State Machine and itself.\n// When that Sub-State Machine exits, it will re-enter itself.\nrootSsm.Restarts();\n'})}),"\n",(0,a.jsx)(n.h3,{id:"packaging-non-vrchat-projects-and-non-destructive",children:"Packaging, Non-VRChat projects, and non-destructive"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Make it usable in ",(0,a.jsx)(n.strong,{children:"non-VRChat"})," avatar projects.","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"VRChat-related functionality is now exposed as extension functions in a separate package."}),"\n",(0,a.jsx)(n.li,{children:"Also, separate destructive functions and non-destructive functions."}),"\n",(0,a.jsx)(n.li,{children:"Since this no longer requires a VRChat project, this also means it may now be usable in VRChat world projects."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-csharp",children:'// Animator As Code V1 no longer requires VRChat (compared to V0).\n// VRChat-specific functions have been moved to extension methods.\n// If you want to use VRChat Avatars functionality, add the `Animator As Code V1 - VRChat` package, and do the following:\n//\n// Add the following import:\n// using AnimatorAsCode.V1.VRC;\n// \n// To access VRChat parameters, use the following extension method:\nvar vrcAv3 = layer.Av3();\n// To access VRChat assets, use the following extension method:\nvar vrcAssets = aac.VrcAssets();\n\nlayer.NewState("UsingVRChat")\n    .WithAnimation(vrcAssets.ProxyForGesture(AacAv3.Av3Gesture.HandOpen, false))\n    // VRChat State Behaviours are created through extension methods located in namespace `AnimatorAsCode.V1.VRC`\n    .TrackingAnimates(AacAv3.Av3TrackingElement.RightHand)\n    .Driving(driver => driver.Sets(layer.BoolParameter("A"), true))\n    .TransitionsFromEntry()\n    .When(vrcAv3.GestureRight.IsEqualTo(AacAv3.Av3Gesture.HandOpen));\n'})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Make it more usable in non-destructive components.","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["It is already in use in ",(0,a.jsx)(n.em,{children:"Prefabulous"})," and ",(0,a.jsx)(n.em,{children:"Vixen"}),"."]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.li,{children:"Move to packages, for distribution using VCC (and now, ALCOM)."}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"blendtrees",children:"BlendTrees"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["It is now possible to build Unity ",(0,a.jsxs)(n.a,{href:"/docs/products/animator-as-code/functions/base#blend-trees-aacflblendtree",children:[(0,a.jsx)(n.strong,{children:"BlendTree"})," assets using a fluent interface"]}),"."]}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-csharp",children:'layer.NewState("BlendTrees").WithAnimation(aac.NewBlendTree()\n    .FreeformDirectional2D(layer.FloatParameter("X"), layer.FloatParameter("Y"))\n    .WithAnimation(aac.NewClip("Center"), 0, 0)\n    .WithAnimation(aac.NewClip("Up"), Vector2.up)\n    .WithAnimation(aac.NewClip("Right"), 1, 0)\n    .WithAnimation(aac.NewClip("Down"), 0, -1)\n    .WithAnimation(aac.NewClip("Left"), -1, 0)\n);\nvar one = layer.FloatParameter("One");\nlayer.OverrideValue(one, 1f);\nlayer.NewState("Direct BlendTree").WithAnimation(aac.NewBlendTree()\n    .Direct()\n    .WithAnimation(aac.NewClip("DrivenByA"), layer.FloatParameter("A"))\n    .WithAnimation(aac.NewClip("AlwaysOn"), one)\n    .WithAnimation(aac.NewBlendTree().Simple1D(layer.FloatParameter("B"))\n            // In Animator As Code, it is safe to declare points in a Simple1D blend tree in a different order (i.e. 0, 1, -1).\n            // (In native blend trees, it would not have been safe to do so)\n            .WithAnimation(aac.NewClip("Zero"), 0)\n            .WithAnimation(aac.NewClip("Positive"), 1)\n            .WithAnimation(aac.NewClip("Negative"), -1)\n        , one)\n);\n'})}),"\n",(0,a.jsx)(n.h2,{id:"vrchat-specific-features",children:"VRChat-specific features"}),"\n",(0,a.jsx)(n.h3,{id:"animatorplayaudio",children:"AnimatorPlayAudio"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.em,{children:"Animator As Code for VRChat"})," supports for ",(0,a.jsx)(n.strong,{children:"VRCAnimatorPlayAudio"})," through the ",(0,a.jsx)(n.code,{children:"AacFlState.Audio(AudioSource or string, ...)"})," function,\n",(0,a.jsx)(n.a,{href:"/docs/products/animator-as-code/functions/vrchat#audio-editing-aacvrcfleditanimatorplayaudio",children:"which takes a lambda expression as a parameter"}),"."]}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-csharp",children:'AudioSource source = MyAudioSource(); // This can be a string instead.\nAudioClip[] clips = MyAudioClips();\nlayer.NewState("UsingAudio")\n    .Audio(source, audio =>\n    {\n        // Get the PlayAudio object if there\'s a need to edit it directly.\n        VRCAnimatorPlayAudio vrcAnimatorPlayAudio = audio.PlayAudio;\n\n        // By default, a PlayAudio created through AAC does nothing (unlike a manually created behaviour)\n        // so you need to invoke anything that is relevant.\n        audio\n            .SelectsClip(VRC_AnimatorPlayAudio.Order.Random, clips)\n            .SetsLooping()\n            .RandomizesPitch(0.8f, 1.2f)\n            .RandomizesVolume(0.5f, 1f)\n            // "Replays" means Stop and Play.\n            // "StartsPlaying" means just Play.\n            // "StopsPlaying" means just Stop.\n            // To do neither Stop nor Play, don\'t invoke anything.\n            .StartsPlayingOnEnter()\n            .StopsPlayingOnExit();\n    });\n'})}),"\n",(0,a.jsx)(n.h3,{id:"prettier-parameter-drivers",children:"Prettier Parameter Drivers"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["As ",(0,a.jsx)(n.em,{children:"VRCAvatarParameterDriver"})," has evolved over the years, you can now build multiple ",(0,a.jsx)(n.strong,{children:"VRCAvatarParameterDriver"})," behaviours on the same state\nthrough the ",(0,a.jsx)(n.code,{children:"AacFlState.Driving(...)"})," function, ",(0,a.jsx)(n.a,{href:"/docs/products/animator-as-code/functions/vrchat#driver-editing-aacvrcfleditavatarparameterdriver",children:"which takes a lambda expression as a parameter"}),"."]}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-csharp",children:'layer.NewState("UsingDrivers").Driving(driver => driver\n    .Copies(layer.FloatParameter("CopySource"), layer.FloatParameter("CopyDestination"))\n    .Sets(layer.FloatParameter("Set"), 2.3f)\n    .Increases(layer.FloatParameter("IncreaseBy2"), 2f)\n    .Decreases(layer.FloatParameter("DecreaseBy3"), 3f)\n    .Randomizes(layer.FloatParameter("Randomizes"), 0f, 100f)\n    .Randomizes(layer.BoolParameter("RandomizesBool"), 0.25f) // 25% chance of being true.\n    .Remaps(layer.FloatParameter("RemapsSource"), 0f, 2f, layer.FloatParameter("RemapsDestination"), 2f, 4f)\n// This creates a second VRCAvatarParameterDriver in the same behaviour.\n).Driving(driver => driver\n    .Sets(layer.FloatParameter("SecondDriver"), 100f)\n    .Locally() // Only this second VRCAvatarParameterDriver is local.\n);\n'})}),"\n",(0,a.jsx)(n.h2,{id:"changes-in-v110-compared-to-v1099xx",children:"Changes in V1.1.0 compared to V1.0.99xx"}),"\n",(0,a.jsx)(n.p,{children:"Animator As Code V1.1.0 contains breaking changes compared to Animator As Code (Alpha) V1.0.99xx."}),"\n",(0,a.jsxs)(n.p,{children:["This list does not contain the breaking changes between V0 and V1, please see the ",(0,a.jsx)(n.a,{href:"/docs/products/animator-as-code/migrating-v0-to-v1",children:"migration guide"})," for this."]}),"\n",(0,a.jsx)(n.p,{children:"Compared to 1.0.99xx:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Commit breaking changes to fix inconsistencies in the API:","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"\u26a1 (BREAKING) AacFlController.AnimatorController is no longer settable."}),"\n",(0,a.jsx)(n.li,{children:"\u26a1 (BREAKING) Replace public readonly fields with get-only properties."}),"\n",(0,a.jsx)(n.li,{children:"\u26a1 (BREAKING) Rename AacFlSettingObjectReferenceKeyframes to AacFlSettingKeyframesObjectReference."}),"\n",(0,a.jsxs)(n.li,{children:["\u26a1 (BREAKING) Make constructors non-public.","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"WARNING: The AacFlSettingKeyframes constructor will be made private/internal in V1.2.0."}),"\n",(0,a.jsx)(n.li,{children:"For compatibility reasons it remains public for the duration of V1.1.x."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["Fix inconsistencies in the API:","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Rename AacFlState.WithMotionTime to AacFlState.MotionTime."}),"\n",(0,a.jsx)(n.li,{children:"Rename *Percent to *Normalized."}),"\n",(0,a.jsx)(n.li,{children:"Add additional single-valued and array overloads."}),"\n",(0,a.jsx)(n.li,{children:"Make Component[] methods null-element safe."}),"\n",(0,a.jsx)(n.li,{children:"Add AacFlSettingCurveObjectReference.WithUnit to be on-par with AacFlSettingCurve."}),"\n",(0,a.jsx)(n.li,{children:"Add AacFlSettingCurveColor.WithUnit to be on-par with AacFlSettingCurve."}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.li,{children:"Inline documentation pass."}),"\n",(0,a.jsx)(n.li,{children:"Update LICENSE: Add galister for major contributions."}),"\n",(0,a.jsxs)(n.li,{children:["Accomodate new VRCAnimatorPlayAudio requirements:","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Nodes need to know the Animator Root, so that relative paths can be resolved during the creation of State behaviours (i.e. Relative path of an AudioSource)."}),"\n",(0,a.jsx)(n.li,{children:"Nodes need to have the ability to create a New Behaviour, even if one already exists."}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["Functional fixes:","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Fix AacFlState.WithCycleOffset(AacFlFloatParameter floatParam) now correctly enables the parameter."}),"\n",(0,a.jsxs)(n.li,{children:["Fix Any state transitions will be created from SSMs:","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Due to an implementation error, creating Any state transitions previously did not have any effect in the graph."}),"\n",(0,a.jsx)(n.li,{children:"This now creates Any state from the root machine."}),"\n",(0,a.jsx)(n.li,{children:'Sub-state machines "cannot" have Any state transitions created directly from them.'}),"\n",(0,a.jsx)(n.li,{children:"Internally, Any always comes from the root state machine, but visually in the graph, it will come from the sub-state machine."}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["Make sure State and SSM names don't contain a period '.':","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:'If the name of a state contains a period ".", it can cause the animator to misbehave, so sanitize it.'}),"\n",(0,a.jsx)(n.li,{children:"Transitions would not work properly during the runtime execution of the animator."}),"\n",(0,a.jsx)(n.li,{children:"Apparently this is because sub state machines internally use the dot as a separator."}),"\n",(0,a.jsx)(n.li,{children:'Sanitize the name so that menu state names such as "J. Inner" don\'t mess things up.'}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["Fix calling Or() after TransitionsFromEntry().When(...) no longer fails:","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Calling Or() after TransitionsFromEntry().When(...) used to fail due to an unexpected internal state."}),"\n",(0,a.jsx)(n.li,{children:"This was due to the implicit conversion operator, which converted a null AnimationState to a AacTransitionEndpoint containing null in it."}),"\n",(0,a.jsx)(n.li,{children:"Fix this by returning null in the implicit conversion operators."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["Add AacAccessorForExtensions:","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Add static class AacAccessorForExtensions:","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Provides methods for use by extension functions, exposing methods departing from normal fluent interface usage."}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.li,{children:'Prepare to make methods marked "Not for public use" private starting from V1.2.0.'}),"\n",(0,a.jsx)(n.li,{children:"Due to their active use in other packages, it is not immediately private."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Other notes:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:['Generated assets will now be created with the following prefix: "zAutogenerated/", which may group the animations together in some editor views.',"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["This change is a derivative of a suggestion by ",(0,a.jsx)(n.a,{href:"https://github.com/nullstalgia",children:"nullstalgia"})," in the CGE repository."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"future-breaking-changes-in-v120",children:"Future breaking changes in V1.2.0"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["The AacFlSettingKeyframes constructor will be made private/internal in V1.2.0.","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"For compatibility reasons it remains public for the duration of V1.1.x."}),"\n",(0,a.jsx)(n.li,{children:"It is already marked as obsolete in V1.1.x."}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["The methods AacFlBase.InternalConfiguration and AacFlBase.InternalDoCreateLayer will be made private/internal in V1.2.0.","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"For compatibility reasons it remains public for the duration of V1.1.x."}),"\n",(0,a.jsx)(n.li,{children:"It is already marked as obsolete in V1.1.x."}),"\n",(0,a.jsx)(n.li,{children:"The class AacAccessorForExtensions replaces it."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"These are likely going to be the last breaking change in V1's lifetime."})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}}}]);
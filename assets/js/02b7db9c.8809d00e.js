"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7474],{62636:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var r=n(74848),i=n(28453);const s={unlisted:!0},a="\u26d4\ud83d\udcac Multiplexer (Experimental)",o={id:"products/prefabulous/vrchat/multiplexer",title:"\u26d4\ud83d\udcac Multiplexer (Experimental)",description:"Allows an avatar to temporarily exceed 256 bits of synced parameters during the non-destructive build process.",source:"@site/docs/products/prefabulous/vrchat/multiplexer.md",sourceDirName:"products/prefabulous/vrchat",slug:"/products/prefabulous/vrchat/multiplexer",permalink:"/docs/products/prefabulous/vrchat/multiplexer",draft:!1,unlisted:!0,tags:[],version:"current",frontMatter:{unlisted:!0},sidebar:"tutorialSidebar"},l={},c=[{value:"How to use",id:"how-to-use",level:2},{value:"Option: Execute even when under limit",id:"option-execute-even-when-under-limit",level:3},{value:"Versions",id:"versions",level:2}];function d(e){const t={a:"a",admonition:"admonition",em:"em",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{id:"-multiplexer-experimental",children:"\u26d4\ud83d\udcac Multiplexer (Experimental)"}),"\n",(0,r.jsx)(t.p,{children:"Allows an avatar to temporarily exceed 256 bits of synced parameters during the non-destructive build process."}),"\n",(0,r.jsxs)(t.p,{children:["Excess bits from parameters of your choice will be synced at a slower rate using a ",(0,r.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Multiplexing",children:"multiplexer-styled"})," data synchronization strategy,\nbringing your avatar back under the limit."]}),"\n",(0,r.jsx)(t.p,{children:"It is ideally used on parameters that are rarely updated."}),"\n",(0,r.jsx)(t.admonition,{type:"danger",children:(0,r.jsx)(t.p,{children:"This component is in an experimental phase, and may be subject to significant changes in the future."})}),"\n",(0,r.jsx)(t.h2,{id:"how-to-use",children:"How to use"}),"\n",(0,r.jsx)(t.p,{children:"This component will sync the parameters of your choice using a multiplexer if you are over 256 bits of synced parameters."}),"\n",(0,r.jsx)(t.p,{children:"This benefit comes with a time trade-off: Those parameters will take longer to sync."}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"Use this on parameters that you change rarely, where you can afford to have a delay."}),"\n",(0,r.jsx)(t.li,{children:"Do not use this on parameters where the effect must be instantaneously seen by others, even if the parameter is changed rarely."}),"\n",(0,r.jsx)(t.li,{children:"Do not use this on parameters that you need to update in real-time, such as face tracking and eye tracking."}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:"The sync delay will depend on the overall amount of bits of parameters that you want to sync."}),"\n",(0,r.jsx)(t.h3,{id:"option-execute-even-when-under-limit",children:"Option: Execute even when under limit"}),"\n",(0,r.jsx)(t.p,{children:"By default, this component will not create the multiplexer if you are not exceeding 256 bits of synced parameters in the first place."}),"\n",(0,r.jsx)(t.p,{children:"If you find any reason to create the multiplexer regardless, you can choose to do so."}),"\n",(0,r.jsx)(t.h2,{id:"versions",children:"Versions"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"1.11.0"}),": Added."]}),"\n"]}),"\n",(0,r.jsxs)(t.p,{children:["Classification: ",(0,r.jsxs)(t.em,{children:["This component is ",(0,r.jsx)(t.strong,{children:"\ud83d\udcac VRChat Only"}),"."]})]})]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);
"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3780],{26409:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var s=n(74848),a=n(28453);const o={date:"2024-08-21T04:10",unlisted:!0},r="\u2600\ufe0f Convert back to Unity Constraints (Prefabulous Universal V2.1) (\ud83d\udeab STAGING)",i={permalink:"/updates/2024/08/21/p1",source:"@site/updates/2024-08-21-p1.md",title:"\u2600\ufe0f Convert back to Unity Constraints (Prefabulous Universal V2.1) (\ud83d\udeab STAGING)",description:"Generate Twist Bones",date:"2024-08-21T04:10:00.000Z",tags:[],hasTruncateMarker:!1,authors:[],frontMatter:{date:"2024-08-21T04:10",unlisted:!0},unlisted:!0},c={authorsImageUrls:[]},l=[{value:"Generate Twist Bones",id:"generate-twist-bones",level:3},{value:"\u2600\ufe0f New component: Convert back to Unity Constraints",id:"\ufe0f-new-component-convert-back-to-unity-constraints",level:3}];function d(e){const t={a:"a",em:"em",h3:"h3",li:"li",p:"p",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h3,{id:"generate-twist-bones",children:"Generate Twist Bones"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["Modify the behaviour of ",(0,s.jsx)(t.em,{children:"Generate Twist Bones"})," on VRChat projects:","\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["If VRChat 3.7.0 or above is installed in the project, we will generate a ",(0,s.jsx)(t.em,{children:"VRC Aim Constraint"})," component instead of a Unity ",(0,s.jsx)(t.em,{children:"Aim Constraint"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"\ufe0f-new-component-convert-back-to-unity-constraints",children:"\u2600\ufe0f New component: Convert back to Unity Constraints"}),"\n",(0,s.jsxs)(t.p,{children:["A new component, ",(0,s.jsx)(t.a,{href:"/docs/products/prefabulous/universal/convert-back-to-unity-constraints",children:"Convert back to Unity Constraints"}),", has been added to Prefabulous Universal."]}),"\n",(0,s.jsx)(t.p,{children:"It converts VRC Constraint components back to native Unity Constraints, to the extent applicable."}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"VRC-specific features (local axis, freeze to world) are not supported."}),"\n",(0,s.jsx)(t.li,{children:"The VRChat SDK assemblies and DLLs do not need to be installed in the project, as long as the types exist, so they could be mere stubs."}),"\n",(0,s.jsxs)(t.li,{children:["If you add ",(0,s.jsx)(t.a,{href:"https://modular-avatar.nadena.dev/docs/reference/convert-constraints",children:"Modular Avatar Convert Constraints"}),"\nin the same avatar as ",(0,s.jsx)(t.a,{href:"/docs/products/prefabulous/universal/convert-back-to-unity-constraints",children:"Prefabulous Convert back to Unity Constraints"}),", your avatar will explode."]}),"\n"]})]})}function u(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);
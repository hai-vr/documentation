"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1502],{3905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>y});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var l=r.createContext({}),u=function(e){var t=r.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},m=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},p="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),p=u(a),d=n,y=p["".concat(l,".").concat(d)]||p[d]||c[d]||o;return a?r.createElement(y,i(i({ref:t},m),{},{components:a})):r.createElement(y,i({ref:t},m))}));function y(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,i=new Array(o);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:n,i[1]=s;for(var u=2;u<o;u++)i[u]=a[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}d.displayName="MDXCreateElement"},8526:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>s,toc:()=>u});var r=a(7462),n=(a(7294),a(3905));const o={sidebar_position:8},i="Barebones way",s={unversionedId:"products/animator-as-code/reference-barebones",id:"products/animator-as-code/reference-barebones",title:"Barebones way",description:"This is the work-in-progress documentation for Animator As Code V1, which has not yet been released. The last public version of Animator As Code is V0.",source:"@site/docs/products/animator-as-code/reference-barebones.md",sourceDirName:"products/animator-as-code",slug:"/products/animator-as-code/reference-barebones",permalink:"/docs/products/animator-as-code/reference-barebones",draft:!1,tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8},sidebar:"tutorialSidebar",previous:{title:"NDMF Processor",permalink:"/docs/products/animator-as-code/functions/ndmf-processor"},next:{title:"Migrating from V0 to V1",permalink:"/docs/products/animator-as-code/migrating-v0-to-v1"}},l={},u=[{value:"Typical animator creation steps",id:"typical-animator-creation-steps",level:2},{value:"Declare an Animator As Code (AAC)",id:"declare-an-animator-as-code-aac",level:2},{value:"Create one or multiple layers",id:"create-one-or-multiple-layers",level:2}],m={toc:u},p="wrapper";function c(e){let{components:t,...a}=e;return(0,n.kt)(p,(0,r.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"barebones-way"},"Barebones way"),(0,n.kt)("admonition",{type:"danger"},(0,n.kt)("p",{parentName:"admonition"},"This is the work-in-progress documentation for Animator As Code ",(0,n.kt)("strong",{parentName:"p"},"V1"),", which has not yet been released. The last public version of Animator As Code is V0.")),(0,n.kt)("p",null,"This section describes how to initialize Animator As Code in an environment where no integration is available."),(0,n.kt)("p",null,"This is good for:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Generating Animator Controller assets on-disk."),(0,n.kt)("li",{parentName:"ul"},"Using Animator As Code in a non-VRChat Avatars project.")),(0,n.kt)("p",null,"If you are using VRChat Avatars, it is highly recommended that you look into the ",(0,n.kt)("a",{parentName:"p",href:"getting-started"},"non-destructive workflow examples"),"."),(0,n.kt)("h2",{id:"typical-animator-creation-steps"},"Typical animator creation steps"),(0,n.kt)("p",null,"If you use Animator As Code barebones, it is generally used in the following steps:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Declare an Animator As Code"),(0,n.kt)("li",{parentName:"ul"},"Create one or multiple layers"),(0,n.kt)("li",{parentName:"ul"},"Create the states",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Create the animations at the same time"))),(0,n.kt)("li",{parentName:"ul"},"Create the transitions")),(0,n.kt)("h2",{id:"declare-an-animator-as-code-aac"},"Declare an Animator As Code (AAC)"),(0,n.kt)("admonition",{type:"caution"},(0,n.kt)("p",{parentName:"admonition"},"These steps describe how to use Animator As Code without the help of any other dependency."),(0,n.kt)("p",{parentName:"admonition"},"In VRChat Avatars, it may be much easier to use Animator As Code ",(0,n.kt)("a",{parentName:"p",href:"getting-started"},"when it is integrated with Modular Avatar and NDMF"),".")),(0,n.kt)("p",null,"In order to use Animator As Code (AAC), first, declare it with a configuration."),(0,n.kt)("p",null,"The AAC configuration requires the following:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"A system name.",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Animator As Code describes systems. A system can have multiple layers, not only across playable layer animators, but also within a single playable layer animator. All created layers will be prefixed with this system name."),(0,n.kt)("li",{parentName:"ul"},"It is up to you to decide where the boundaries of the system lies."))),(0,n.kt)("li",{parentName:"ul"},"An animator root, and default value root.",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"This is used to select the playable layer animators to use."),(0,n.kt)("li",{parentName:"ul"},"This is also used to select the root transform that animations will use for relative paths."),(0,n.kt)("li",{parentName:"ul"},"This is used to collect the default values for some animations."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("em",{parentName:"li"},"In general, they are the same object, but this is not mandatory.")))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("em",{parentName:"li"},"In the case of a destructive workflow in VRChat:")," An avatar descriptor.",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"This is used to select the playable layer animators to use."))),(0,n.kt)("li",{parentName:"ul"},"An asset container.",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Animations are generated by Animator As Code, and the large quantity of generated assets can be quite messy. To limit littering your project, such assets will be generated as sub-assets of a container. The container is of type Animator Controller, but it doesn\u2019t need to have any layers within it."))),(0,n.kt)("li",{parentName:"ul"},"An asset key.",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"The asset key a prefix that all generated assets will use. When creating the layers, all generated assets that uses that prefix will be removed upon invocation of ",(0,n.kt)("inlineCode",{parentName:"li"},"aac.ClearPreviousAssets()"),"."))),(0,n.kt)("li",{parentName:"ul"},"A provider of defaults.",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Animator As Code is opinionated, and sometimes you want to tweak the default values. The provider of defaults is executed when a state is created, an animation is created, a transition is created. This will let you tweak the generation process.")))),(0,n.kt)("p",null,"To declare it:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp"},"string systemName;\nVRCAvatarDescriptor avatar;\nAnimatorController assetContainer;\nstring assetKey;\n\nvar aac = AacV0.Create(new AacConfiguration\n{\n    SystemName = systemName,\n    AvatarDescriptor = avatar,\n    AnimatorRoot = avatar.transform,\n    DefaultValueRoot = avatar.transform,\n    AssetContainer = assetContainer,\n    AssetKey = assetKey,\n    DefaultsProvider = new AacDefaultsProvider(writeDefaults: false)\n});\n// Remove all previously generated assets from the asset container\n// that match the asset key.\naac.ClearPreviousAssets();\n")),(0,n.kt)("h2",{id:"create-one-or-multiple-layers"},"Create one or multiple layers"),(0,n.kt)("p",null,"Using AAC, create layers in your animators. A system can have multiple layers across animators."),(0,n.kt)("p",null,"There is one main layer, and multiple supporting layers, per animator."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"The main layer will be named exactly after your system name."),(0,n.kt)("li",{parentName:"ul"},"The supporting layers will be prefixed by the system name, and appended with a suffix of your choice.")),(0,n.kt)("p",null,"You are in no obligation to create a main layer. If you think several layers of the same animators are of equal importance, you can declare them as being supporting layers."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp"},'var fx = aac.CreateMainFxLayer();\nvar detection = aac.CreateSupportingFxLayer("Detection");\n')))}c.isMDXComponent=!0}}]);
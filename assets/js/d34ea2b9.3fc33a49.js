"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[74403],{396:(e,s,i)=>{i.r(s),i.d(s,{assets:()=>l,contentTitle:()=>n,default:()=>c,frontMatter:()=>t,metadata:()=>o,toc:()=>h});var r=i(74848),a=i(28453);const t={},n="Avatar Optimizer",o={id:"basis/avatar-optimizer",title:"Avatar Optimizer",description:"Basis Avatar Optimizer is a work in progress avatar optimization processor that only works on Basis Framework avatars (for the time being).",source:"@site/docs/basis/avatar-optimizer.md",sourceDirName:"basis",slug:"/basis/avatar-optimizer",permalink:"/docs/basis/avatar-optimizer",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"basisSidebar",previous:{title:"Vixxy",permalink:"/docs/basis/avatar-customization/vixxy/"},next:{title:"HVR Developer",permalink:"/docs/basis/hvr-tech/"}},l={},h=[{value:"Third-party acknowledgements",id:"third-party-acknowledgements",level:2}];function d(e){const s={a:"a",h1:"h1",h2:"h2",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.h1,{id:"avatar-optimizer",children:"Avatar Optimizer"}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Basis Avatar Optimizer"})," is a work in progress avatar optimization processor that only works on Basis Framework avatars (for the time being)."]}),"\n",(0,r.jsxs)(s.p,{children:["It is specifically ",(0,r.jsx)(s.strong,{children:"not"})," designed for avatars that use the Animator system."]}),"\n",(0,r.jsx)(s.p,{children:"The following has been implemented so far:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["GameObject optimization:","\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"Disabled GameObjects are removed."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["Blendshape optimization:","\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"Keeps track of which blendshapes vary (face tracking, viseme, blink) and keeps them."}),"\n",(0,r.jsx)(s.li,{children:"Bakes non-varying blendshapes into the mesh (only if all SMRs that reference that mesh have the same value)."}),"\n",(0,r.jsx)(s.li,{children:"Removes unused blendshapes."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h2,{id:"third-party-acknowledgements",children:"Third-party acknowledgements"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["Portions of the code is based on ",(0,r.jsx)(s.a,{href:"https://github.com/d4rkc0d3r/d4rkAvatarOptimizer/",children:"d4rkAvatarOptimizer"})," by d4rkpl4y3r."]}),"\n"]})]})}function c(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);
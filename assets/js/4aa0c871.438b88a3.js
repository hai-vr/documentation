"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[48088],{36463:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var s=a(74848),t=a(28453);const i={sidebar_position:8,title:"(OBSOLETE)Barebones way",unlisted:!0},r="(OBSOLETE)Barebones way",o={id:"products/animator-as-code/obsolete/reference-barebones",title:"(OBSOLETE)Barebones way",description:"\ud83d\udeab This documentation is obsolete, and contains errors. \ud83d\udeab",source:"@site/docs/products/animator-as-code/obsolete/reference-barebones.md",sourceDirName:"products/animator-as-code/obsolete",slug:"/products/animator-as-code/obsolete/reference-barebones",permalink:"/docs/products/animator-as-code/obsolete/reference-barebones",draft:!1,unlisted:!0,tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8,title:"(OBSOLETE)Barebones way",unlisted:!0},sidebar:"tutorialSidebar"},l={},d=[{value:"Typical animator creation steps",id:"typical-animator-creation-steps",level:2},{value:"Declare an Animator As Code (AAC)",id:"declare-an-animator-as-code-aac",level:2},{value:"Create one or multiple layers",id:"create-one-or-multiple-layers",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"obsoletebarebones-way",children:"(OBSOLETE)Barebones way"}),"\n",(0,s.jsx)(n.admonition,{type:"danger",children:(0,s.jsxs)(n.p,{children:["\ud83d\udeab This documentation is obsolete, and ",(0,s.jsx)(n.strong,{children:"contains errors"}),". \ud83d\udeab"]})}),"\n",(0,s.jsx)(n.p,{children:"This section describes how to initialize Animator As Code in an environment where no integration is available."}),"\n",(0,s.jsx)(n.p,{children:"This is good for:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Generating Animator Controller assets on-disk."}),"\n",(0,s.jsx)(n.li,{children:"Using Animator As Code in a non-VRChat Avatars project."}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["If you are using VRChat Avatars, it is highly recommended that you look into the ",(0,s.jsx)(n.a,{href:"getting-started",children:"non-destructive workflow examples"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"typical-animator-creation-steps",children:"Typical animator creation steps"}),"\n",(0,s.jsx)(n.p,{children:"If you use Animator As Code barebones, it is generally used in the following steps:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Declare an Animator As Code"}),"\n",(0,s.jsx)(n.li,{children:"Create one or multiple layers"}),"\n",(0,s.jsxs)(n.li,{children:["Create the states","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Create the animations at the same time"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"Create the transitions"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"declare-an-animator-as-code-aac",children:"Declare an Animator As Code (AAC)"}),"\n",(0,s.jsxs)(n.admonition,{type:"warning",children:[(0,s.jsx)(n.p,{children:"These steps describe how to use Animator As Code without the help of any other dependency."}),(0,s.jsxs)(n.p,{children:["In VRChat Avatars, it may be much easier to use Animator As Code ",(0,s.jsx)(n.a,{href:"getting-started",children:"when it is integrated with Modular Avatar and NDMF"}),"."]})]}),"\n",(0,s.jsx)(n.p,{children:"In order to use Animator As Code (AAC), first, declare it with a configuration."}),"\n",(0,s.jsx)(n.p,{children:"The AAC configuration requires the following:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["A system name.","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Animator As Code describes systems. A system can have multiple layers, not only across playable layer animators, but also within a single playable layer animator. All created layers will be prefixed with this system name."}),"\n",(0,s.jsx)(n.li,{children:"It is up to you to decide where the boundaries of the system lies."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["An animator root, and default value root.","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"This is used to select the playable layer animators to use."}),"\n",(0,s.jsx)(n.li,{children:"This is also used to select the root transform that animations will use for relative paths."}),"\n",(0,s.jsx)(n.li,{children:"This is used to collect the default values for some animations."}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.em,{children:"In general, they are the same object, but this is not mandatory."})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.em,{children:"In the case of a destructive workflow in VRChat:"})," An avatar descriptor.","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"This is used to select the playable layer animators to use."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["An asset container.","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Animations are generated by Animator As Code, and the large quantity of generated assets can be quite messy. To limit littering your project, such assets will be generated as sub-assets of a container. The container is of type Animator Controller, but it doesn\u2019t need to have any layers within it."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["An asset key.","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["The asset key a prefix that all generated assets will use. When creating the layers, all generated assets that uses that prefix will be removed upon invocation of ",(0,s.jsx)(n.code,{children:"aac.ClearPreviousAssets()"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["A provider of defaults.","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Animator As Code is opinionated, and sometimes you want to tweak the default values. The provider of defaults is executed when a state is created, an animation is created, a transition is created. This will let you tweak the generation process."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"To declare it:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:"string systemName;\nVRCAvatarDescriptor avatar;\nAnimatorController assetContainer;\nstring assetKey;\n\nvar aac = AacV0.Create(new AacConfiguration\n{\n    SystemName = systemName,\n    AvatarDescriptor = avatar,\n    AnimatorRoot = avatar.transform,\n    DefaultValueRoot = avatar.transform,\n    AssetContainer = assetContainer,\n    AssetKey = assetKey,\n    DefaultsProvider = new AacDefaultsProvider(writeDefaults: false)\n});\n// Remove all previously generated assets from the asset container\n// that match the asset key.\naac.ClearPreviousAssets();\n"})}),"\n",(0,s.jsx)(n.h2,{id:"create-one-or-multiple-layers",children:"Create one or multiple layers"}),"\n",(0,s.jsx)(n.p,{children:"Using AAC, create layers in your animators. A system can have multiple layers across animators."}),"\n",(0,s.jsx)(n.p,{children:"There is one main layer, and multiple supporting layers, per animator."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"The main layer will be named exactly after your system name."}),"\n",(0,s.jsx)(n.li,{children:"The supporting layers will be prefixed by the system name, and appended with a suffix of your choice."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"You are in no obligation to create a main layer. If you think several layers of the same animators are of equal importance, you can declare them as being supporting layers."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:'var fx = aac.CreateMainFxLayer();\nvar detection = aac.CreateSupportingFxLayer("Detection");\n'})})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}}}]);
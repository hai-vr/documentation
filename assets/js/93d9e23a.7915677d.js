"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3082],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(n),d=o,f=u["".concat(l,".").concat(d)]||u[d]||m[d]||a;return n?r.createElement(f,i(i({ref:t},p),{},{components:n})):r.createElement(f,i({ref:t},p))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:o,i[1]=s;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3812:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var r=n(7462),o=(n(7294),n(3905));const a={sidebar_position:8,title:"NDMF Processor"},i="Functions: NDMF Processor",s={unversionedId:"products/animator-as-code/functions/ndmf-processor",id:"products/animator-as-code/functions/ndmf-processor",title:"NDMF Processor",description:"This is the work-in-progress documentation for Animator As Code V1, which has not yet been released. The last public version of Animator As Code is V0.",source:"@site/docs/products/animator-as-code/functions/ndmf-processor.md",sourceDirName:"products/animator-as-code/functions",slug:"/products/animator-as-code/functions/ndmf-processor",permalink:"/docs/products/animator-as-code/functions/ndmf-processor",draft:!1,tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8,title:"NDMF Processor"},sidebar:"tutorialSidebar",previous:{title:"Modular Avatar",permalink:"/docs/products/animator-as-code/functions/modular-avatar"},next:{title:"Non-destructive workflow examples",permalink:"/docs/products/animator-as-code/examples-maac"}},l={},c=[{value:"Minimal template",id:"minimal-template",level:2},{value:"Direct Blend Trees merger",id:"direct-blend-trees-merger",level:2},{value:"Plugin (AbstractNdmfAsCodePlugin)",id:"plugin-abstractndmfascodeplugin",level:2},{value:"Overrides",id:"overrides",level:3}],p={toc:c},u="wrapper";function m(e){let{components:t,...n}=e;return(0,o.kt)(u,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"functions-ndmf-processor"},"Functions: NDMF Processor"),(0,o.kt)("admonition",{type:"danger"},(0,o.kt)("p",{parentName:"admonition"},"This is the work-in-progress documentation for Animator As Code ",(0,o.kt)("strong",{parentName:"p"},"V1"),", which has not yet been released. The last public version of Animator As Code is V0.")),(0,o.kt)("p",null,"This integration lets you write scripts that run when an avatar is being processed by ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/bdunderscore/ndmf"},"NDMF (Non-Destructive Modular Framework)"),". An Animator As Code instance (",(0,o.kt)("inlineCode",{parentName:"p"},"AacFlBase"),") is provided for you."),(0,o.kt)("p",null,"Here's an example of a toggle written with the NDMF Processor:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},'#if UNITY_EDITOR\nusing System;\nusing ModularAvatarAsCode.V1;\nusing nadena.dev.ndmf;\nusing NdmfAsCode.V1.Example;\nusing UnityEngine;\nusing VRC.SDK3.Avatars.Components;\n\n[assembly: ExportsPlugin(typeof(NdmfAsCodeToggleProcessor))]\nnamespace NdmfAsCode.V1.Example\n{\n    public class NdmfAsCodeToggle : MonoBehaviour\n    {\n        public string parameter;\n        public GameObject[] objects;\n        public Texture2D icon;\n    }\n\n    public class NdmfAsCodeToggleProcessor : AbstractNdmfAsCodePlugin\n    {\n        protected override Type ScriptType => typeof(NdmfAsCodeToggle);\n\n        protected override NdmfAsCodeOutput Execute()\n        {\n            var my = (NdmfAsCodeToggle)script;\n            \n            var ctrl = aac.NewAnimatorController();\n            var fx = ctrl.NewLayer();\n            \n            var off = fx.NewState("OFF").WithAnimation(aac.NewClip().Toggling(my.objects, false));\n            var on = fx.NewState("ON").WithAnimation(aac.NewClip().Toggling(my.objects, true));\n\n            var param = fx.BoolParameter(my.parameter);\n            off.TransitionsTo(on).When(param.IsTrue());\n            on.TransitionsTo(off).When(param.IsFalse());\n\n            var maAc = MaAc.Create(script.gameObject);\n            maAc.NewMergeAnimator(ctrl, VRCAvatarDescriptor.AnimLayerType.FX);\n            maAc.NewParameter(param);\n            maAc.EditMenuItemOnSelf().Toggle(param).Name(my.gameObject.name).WithIcon(my.icon);\n\n            return NdmfAsCodeOutput.Regular();\n        }\n    }\n}\n#endif\n')),(0,o.kt)("h2",{id:"minimal-template"},"Minimal template"),(0,o.kt)("p",null,"Change ",(0,o.kt)("inlineCode",{parentName:"p"},"YourScript")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"YourScriptProcessor")," with the names of your choice."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},"#if UNITY_EDITOR\nusing System;\nusing ModularAvatarAsCode.V1;\nusing nadena.dev.ndmf;\nusing NdmfAsCode.V1.Example;\nusing UnityEngine;\nusing VRC.SDK3.Avatars.Components;\n\n[assembly: ExportsPlugin(typeof(NdmfAsCodeToggleProcessor))]\nnamespace YourNamespace\n{\n    public class YourScript : MonoBehaviour\n    {\n    }\n\n    public class YourScriptProcessor : AbstractNdmfAsCodePlugin\n    {\n        protected override Type ScriptType => typeof(YourScript);\n\n        protected override NdmfAsCodeOutput Execute()\n        {\n            var my = (YourScript)script;\n            \n            var ctrl = aac.NewAnimatorController();\n            var fx = ctrl.NewLayer();\n            \n            // var maAc = MaAc.Create(script.gameObject);\n            // maAc.NewMergeAnimator(ctrl, VRCAvatarDescriptor.AnimLayerType.FX);\n\n            return NdmfAsCodeOutput.Regular();\n        }\n    }\n}\n#endif\n")),(0,o.kt)("h2",{id:"direct-blend-trees-merger"},"Direct Blend Trees merger"),(0,o.kt)("p",null,"If you're familiar with the concept of merging blend trees, the processor can merge them all for you."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},"#if UNITY_EDITOR\nusing System;\nusing nadena.dev.ndmf;\nusing NdmfAsCode.V1;\nusing UnityEngine;\nusing YourNamespace;\n\n[assembly: ExportsPlugin(typeof(YourScriptProcessor))]\nnamespace YourNamespace\n{\n    public class YourScript : MonoBehaviour\n    {\n        public string parameter;\n    }\n\n    public class YourScriptProcessor : AbstractNdmfAsCodePlugin\n    {\n        protected override Type ScriptType => typeof(YourScript);\n\n        protected override NdmfAsCodeOutput Execute()\n        {\n            var my = (YourScript)script;\n\n            var bt = aac.NewBlendTree()\n                .Simple1D(aac.NoAnimator().FloatParameter(my.parameter));\n                // .WithAnimation(aac.NewClip()..., 0)\n                // .WithAnimation(aac.NewClip()..., 1)\n            \n            return NdmfAsCodeOutput.MergeIntoDirectBlendTree(bt.BlendTree);\n        }\n    }\n}\n#endif\n")),(0,o.kt)("h2",{id:"plugin-abstractndmfascodeplugin"},"Plugin (AbstractNdmfAsCodePlugin)"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"protected AacFlBase aac;")," ",(0,o.kt)("br",null),"\nThis field contains the Animator As Code instance. To customize the configuration, see ",(0,o.kt)("a",{parentName:"p",href:"#overrides"},"Overrides")," below.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"protected Component script;")," ",(0,o.kt)("br",null),"\nThis field contains the instance of your targeted script being processed. You should immediately cast this script to use it.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"protected BuildContext buildContext;")," ",(0,o.kt)("br",null),"\nThis field contains the build context of NDMF."))),(0,o.kt)("h3",{id:"overrides"},"Overrides"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"protected virtual Type ScriptType")," ",(0,o.kt)("br",null),"\nDefine the component type that you are targeting. This must be overriden in your processor.")),(0,o.kt)("p",null,"You may override those methods if necessary:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"protected virtual string SystemName(Component script, BuildContext context) => GetType().Name;")," ",(0,o.kt)("br",null),"\nGenerated layers will be prefixed with the system name.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"protected virtual Transform AnimatorRoot(Component script, BuildContext context) => context.AvatarRootTransform;")," ",(0,o.kt)("br",null),"\nThe root transform is used to determine the relative paths to the object references that will be used within the animation. If you want to reuse a component on multiple avatars without reassigning the references, you can override this behaviour.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"protected virtual Transform DefaultValueRoot(Component script, BuildContext context) => context.AvatarRootTransform;")," ",(0,o.kt)("br",null),"\n(At the moment, the DefaultValueRoot is not used in Animator As Code. It is meant to be used for sampling the default values of animated properties, so it may be different from the AnimatorRoot above)")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"protected virtual bool UseWriteDefaults(Component script, BuildContext context) => false;")," ",(0,o.kt)("br",null),"\nChoose the default WriteDefaults state."))))}m.isMDXComponent=!0}}]);
"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1948],{19667:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>d,contentTitle:()=>r,default:()=>a,frontMatter:()=>t,metadata:()=>c,toc:()=>h});var l=n(74848),i=n(28453);const t={unlisted:!0,sidebar_position:1},r="Selectors",c={id:"products/starmesh/selectors",title:"Selectors",description:"This tool is currently not available, and this documentation is currently being written.",source:"@site/docs/products/starmesh/selectors.md",sourceDirName:"products/starmesh",slug:"/products/starmesh/selectors",permalink:"/docs/products/starmesh/selectors",draft:!1,unlisted:!0,tags:[],version:"current",sidebarPosition:1,frontMatter:{unlisted:!0,sidebar_position:1},sidebar:"tutorialSidebar"},d={},h=[{value:"Select Meshes",id:"select-meshes",level:2},{value:"Skinned Meshes",id:"skinned-meshes",level:3},{value:"Non-Skinned Meshes",id:"non-skinned-meshes",level:3},{value:"Select Radius",id:"select-radius",level:2},{value:"Select Line",id:"select-line",level:2},{value:"Select Blendshapes",id:"select-blendshapes",level:2},{value:"Select Gradient",id:"select-gradient",level:2},{value:"Select Angle",id:"select-angle",level:2},{value:"Select Plane Divider",id:"select-plane-divider",level:2},{value:"Select Left/Right Divider",id:"select-leftright-divider",level:2},{value:"Select Box",id:"select-box",level:2},{value:"Select UV Mask",id:"select-uv-mask",level:2},{value:"Select Flood Fill",id:"select-flood-fill",level:2}];function o(e){const s={admonition:"admonition",em:"em",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(s.h1,{id:"selectors",children:"Selectors"}),"\n",(0,l.jsx)(s.admonition,{type:"danger",children:(0,l.jsx)(s.p,{children:"This tool is currently not available, and this documentation is currently being written."})}),"\n",(0,l.jsx)(s.h2,{id:"select-meshes",children:"Select Meshes"}),"\n",(0,l.jsx)(s.p,{children:"Specify which meshes will be affected."}),"\n",(0,l.jsx)(s.h3,{id:"skinned-meshes",children:"Skinned Meshes"}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.strong,{children:"Skinned Mesh Renderers"}),": Select SkinnedMeshRenderer components."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.strong,{children:"Split Left/Right"}),": Mark this selection has having a Left/Right counterpart."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.strong,{children:"Bones (Left/Right)"}),": Only the vertices attached to these bones will be selected. If there are no bones selected, then all vertices will be selected.","\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsx)(s.li,{children:(0,l.jsx)(s.em,{children:"Use other Selector components below to reduce the selection."})}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.strong,{children:"Bone Weight Curve"}),": After all bones are selected, the weight will be remapped using this curve."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.strong,{children:"Initial Blendshapes"}),": During the calculations, these blendshapes will be emulated to be active as part of the operations."]}),"\n"]}),"\n",(0,l.jsx)(s.h3,{id:"non-skinned-meshes",children:"Non-Skinned Meshes"}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.strong,{children:"Mesh Renderers"}),": Select all vertices of MeshRenderer components."]}),"\n"]}),"\n",(0,l.jsx)(s.h2,{id:"select-radius",children:"Select Radius"}),"\n",(0,l.jsx)(s.p,{children:"Reduces the current selection so that only vertices within a radius around a point will be selected."}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.strong,{children:"Radius"}),": The radius of this point."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.strong,{children:"Selection Curve"}),": The normalized distance will be remapped to this curve."]}),"\n"]}),"\n",(0,l.jsx)(s.h2,{id:"select-line",children:"Select Line"}),"\n",(0,l.jsx)(s.p,{children:"Reduces the current selection so that only vertices in proximity to a line will be selected."}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.strong,{children:"Radius A"}),": The radius of the line at point A."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.strong,{children:"Radius B"}),": The radius of the line at point B."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.strong,{children:"Selection Curve A"}),": Vertices on the A side will have their normalized distance will be remapped to this curve."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.strong,{children:"Selection Curve B"}),": Vertices on the B side will have their normalized distance will be remapped to this curve."]}),"\n"]}),"\n",(0,l.jsx)(s.p,{children:"Vertices between A and B will be will have their normalized distance will be remapped to both this curve and the Selection Curve B,\nbased on the projection of that vertex on that line."}),"\n",(0,l.jsx)(s.h2,{id:"select-blendshapes",children:"Select Blendshapes"}),"\n",(0,l.jsx)(s.p,{children:"Reduces the current selection so that only vertices affected by a blendshape will be selected."}),"\n",(0,l.jsx)(s.h2,{id:"select-gradient",children:"Select Gradient"}),"\n",(0,l.jsx)(s.p,{children:"Reduces the current selection so that vertices across a region will be subject to a gradient."}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.strong,{children:"Selection Curve"}),": The normalized distance will be remapped to this curve."]}),"\n"]}),"\n",(0,l.jsx)(s.h2,{id:"select-angle",children:"Select Angle"}),"\n",(0,l.jsx)(s.p,{children:"Reduces the current selection so that vertices within an angle will be selected."}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.strong,{children:"Angle"}),": The maximum angle in degrees to select, beyond which vertices will not be selected."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.strong,{children:"Selection Curve"}),": The normalized angle will be remapped to this curve."]}),"\n"]}),"\n",(0,l.jsx)(s.h2,{id:"select-plane-divider",children:"Select Plane Divider"}),"\n",(0,l.jsx)(s.p,{children:"Reduces the current selection so that only vertices on one side of a plane will be selected."}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.strong,{children:"Radius"}),": The proximity to that plane."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.strong,{children:"Selection Curve"}),": The normalized distance will be remapped to this curve."]}),"\n"]}),"\n",(0,l.jsx)(s.h2,{id:"select-leftright-divider",children:"Select Left/Right Divider"}),"\n",(0,l.jsx)(s.p,{children:"Reduces the current selection so that only vertices on one side of the avatar will be selected, left or right."}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.strong,{children:"Radius"}),": The proximity to the plane that divides the avatar between and right."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.strong,{children:"Selection Curve"}),": The normalized distance will be remapped to this curve."]}),"\n"]}),"\n",(0,l.jsx)(s.h2,{id:"select-box",children:"Select Box"}),"\n",(0,l.jsx)(s.p,{children:"Reduces the current selection so that only vertices within a box will be selected."}),"\n",(0,l.jsx)(s.h2,{id:"select-uv-mask",children:"Select UV Mask"}),"\n",(0,l.jsx)(s.p,{children:"Reduces the current selection so that a UV mask is used to select which vertices will be affected."}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.strong,{children:"Mask"}),": The mask texture to use."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.strong,{children:"UV Channel"}),": The UV channel to use."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.strong,{children:"Selection Curve"}),": The normalized masked amount will be remapped to this curve."]}),"\n"]}),"\n",(0,l.jsx)(s.h2,{id:"select-flood-fill",children:"Select Flood Fill"}),"\n",(0,l.jsx)(s.p,{children:"Reduces the current selection so that only the network of edges connected to at least one of the points will be affected."})]})}function a(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,l.jsx)(s,{...e,children:(0,l.jsx)(o,{...e})}):o(e)}}}]);
"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4941],{26019:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>r,default:()=>h,frontMatter:()=>t,metadata:()=>l,toc:()=>d});var a=s(85893),i=s(11151);const t={unlisted:!0},r="Non-linear Blendshapes",l={id:"products/prefabulous-avatar/hai-components/non-linear-blendshapes",title:"Non-linear Blendshapes",description:"Rewrites existing blendshapes by adding multiple regularly-spaced keyframes:",source:"@site/docs/products/prefabulous-avatar/hai-components/non-linear-blendshapes.md",sourceDirName:"products/prefabulous-avatar/hai-components",slug:"/products/prefabulous-avatar/hai-components/non-linear-blendshapes",permalink:"/docs/products/prefabulous-avatar/hai-components/non-linear-blendshapes",draft:!1,unlisted:!0,tags:[],version:"current",frontMatter:{unlisted:!0},sidebar:"tutorialSidebar"},o={},d=[{value:"Versions",id:"versions",level:2}];function c(e){const n={em:"em",h1:"h1",h2:"h2",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"non-linear-blendshapes",children:"Non-linear Blendshapes"}),"\n",(0,a.jsx)(n.p,{children:"Rewrites existing blendshapes by adding multiple regularly-spaced keyframes:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"At the values of 0 and 100, the blendshape looks identical to the original,"}),"\n",(0,a.jsx)(n.li,{children:"between 0 and 100, each vertex is moved differently based on the distance it moves relative to the maximum distance moved on any vertex of this blendshape."}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"This causes the vertices of this blendshape to be moved non-linearly."}),"\n",(0,a.jsx)(n.h2,{id:"versions",children:"Versions"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"1.10.0"}),": Added."]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["Classification: ",(0,a.jsx)(n.em,{children:"This component is application-agnostic."})]})]})}function h(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}}}]);